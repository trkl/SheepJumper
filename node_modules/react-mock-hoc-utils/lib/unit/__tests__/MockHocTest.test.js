"use strict";

var _mocks = require("../../../../../tests/setup/mocks");

var _mocks2 = _interopRequireDefault(_mocks);

var _enzyme = require("enzyme");

var _mockHoc = require("../../../../../tests/setup/mockHoc");

var _mockHoc2 = _interopRequireDefault(_mockHoc);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MockHocTest = void 0;

// * ------------------- Builder examples ------------------- *

// ? constructs the mock-hoc object,
// ?? imports a hoc,
// ??? and creates the mocked wrapped component
var builder = function builder(props) {
  MockHocTest = (0, _mockHoc2.default)("../MockHocTest.js").mock("../HigherOrderComponent.js").create();

  return (0, _enzyme.shallow)(_mocks2.default.createElement(MockHocTest, props)).dive();
};

// ? constructs a mock-hoc object,
// ??imports a hoc,
// ??? injects props into the wrapped component from the hoc,
// ???? creates the the mocked wrapped component
var builder_with_injected_props = function builder_with_injected_props(props, injectedProps) {
  MockHocTest = (0, _mockHoc2.default)("../MockHocTest.js").mock("../HigherOrderComponent.js").with(injectedProps).create();

  return (0, _enzyme.shallow)(_mocks2.default.createElement(MockHocTest, props)).dive();
};

// ? constructs the mock-hoc object, but the path start is manually set,
// ?? imports a hoc,
// ??? and creates the mocked wrapped component
var builder_with_manual_start_path = function builder_with_manual_start_path(props) {
  MockHocTest = (0, _mockHoc2.default)("../MockHocTest.js", __dirname).mock("../HigherOrderComponent.js").create();

  return (0, _enzyme.shallow)(_mocks2.default.createElement(MockHocTest, props)).dive();
};

// * --------------------------------------------------------- *

var test = void 0;
describe("MockHocTest", function () {
  it("An empty HigherOrderComponent wrap: should have a prop called name, with the value 'John'", function () {
    test = builder({ name: "John" });
    expect(test.instance().props.name).toBe("John");
  });

  it("A HigherOrderComponent with injecting props wrap: should have a prop called lastName, with the value 'Doe'", function () {
    test = builder_with_injected_props({ name: "John" }, { lastName: "Doe" });
    expect(test.instance().props.lastName).toBe("Doe");
  });

  it("An empty HigherOrderComponent, but start path is manually set", function () {
    test = builder_with_manual_start_path({ name: "John" });
    expect(test.instance().props.name).toBe("John");
  });
});