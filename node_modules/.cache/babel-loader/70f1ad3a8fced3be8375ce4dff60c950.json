{"ast":null,"code":"import _classCallCheck from \"/Users/torkildjurhuus/Code/SheepJumper/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/torkildjurhuus/Code/SheepJumper/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/torkildjurhuus/Code/SheepJumper/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/torkildjurhuus/Code/SheepJumper/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"/Users/torkildjurhuus/Code/SheepJumper/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"/Users/torkildjurhuus/Code/SheepJumper/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/torkildjurhuus/Code/SheepJumper/src/Resources/Games/SheepRunner/GameComponents/Runner.js\";\nimport GameComponent from \"../../../../GameObject/GameComponent\";\nimport React from \"react\";\nimport RigidBody from \"../../../../GameObject/RigidBody\";\nimport CollisionZone from \"../../../../GameObject/CollisionZone\";\nimport Vector from \"../../../../Vector/Vector\";\nimport WithKeyboardSubscribe from \"../../../../InputManager/HOC/WithKeyboardSubscribe\";\nimport PropTypes from \"prop-types\";\nimport Sprite from \"../../../../Sprite/Sprite\";\nimport AudioManager from \"../../../../AudioManager/AudioManager\";\nimport { WithWorld } from \"../../../../World/HOC/WithWorld\";\n\nvar Runner =\n/*#__PURE__*/\nfunction (_GameComponent) {\n  _inherits(Runner, _GameComponent);\n\n  function Runner(props) {\n    var _this;\n\n    _classCallCheck(this, Runner);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Runner).call(this, props));\n    _this.children = [React.createElement(RigidBody, {\n      weight: 10,\n      velocity: _this.props.velocity,\n      force: _this.props.force,\n      gravity: _this.props.gravity,\n      drag: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(CollisionZone, {\n      offset: new Vector([0.5, 0]),\n      dimensions: new Vector([3.5, 10.3]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Sprite, {\n      scale: 0.4,\n      width: 2048,\n      height: 256,\n      n: 8,\n      imagesource: \"bondin.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })];\n    _this.cameraFollows = _this.props.cameraFollows;\n    _this.AudioManager = new AudioManager();\n    return _this;\n  }\n\n  _createClass(Runner, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      _get(_getPrototypeOf(Runner.prototype), \"componentWillMount\", this).call(this);\n\n      if (this.props.controller) this.props.keyboardSubscribe(this, \" \", {\n        physics: {\n          force: new Vector([0, -10000]),\n          duration: 70\n        },\n        audio: {\n          soundName: \"sfx_wing.wav\"\n        }\n      }); // this.props.keyboardSubscribe(this, \"s\", {\n      //   physics: { force: new Vector([0, 10000]), duration: 70 },\n      //   audio: {soundName: \"sfx_wing.wav\"},\n      // });\n      // this.props.keyboardSubscribe(this, \"d\", {\n      //   physics: { force: new Vector([1000, 0]), duration: 70 },\n      //   audio: {soundName: \"sfx_wing.wav\"},\n      // });\n      // this.props.keyboardSubscribe(this, \"a\", {\n      //   physics: { force: new Vector([-1000, 0]), duration: 70 },\n      //   audio: {soundName: \"sfx_wing.wav\"},\n      // });\n    }\n  }]);\n\n  return Runner;\n}(GameComponent);\n\nRunner.propTypes = {\n  cameraFollows: PropTypes.bool.isRequired\n};\nRunner.defaultProps = {\n  cameraFollows: false\n};\nexport default WithWorld(WithKeyboardSubscribe(Runner));","map":{"version":3,"sources":["/Users/torkildjurhuus/Code/SheepJumper/src/Resources/Games/SheepRunner/GameComponents/Runner.js"],"names":["GameComponent","React","RigidBody","CollisionZone","Vector","WithKeyboardSubscribe","PropTypes","Sprite","AudioManager","WithWorld","Runner","props","children","velocity","force","gravity","cameraFollows","controller","keyboardSubscribe","physics","duration","audio","soundName","propTypes","bool","isRequired","defaultProps"],"mappings":";;;;;;;AAAA,OAAOA,aAAP,MAA0B,sCAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,aAAP,MAA0B,sCAA1B;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,qBAAP,MAAkC,oDAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,SAAT,QAA0B,iCAA1B;;IAEMC,M;;;;;AACJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gFAAMA,KAAN;AADiB,UA2BnBC,QA3BmB,GA2BR,CACT,oBAAC,SAAD;AACE,MAAA,MAAM,EAAE,EADV;AAEE,MAAA,QAAQ,EAAE,MAAKD,KAAL,CAAWE,QAFvB;AAGE,MAAA,KAAK,EAAE,MAAKF,KAAL,CAAWG,KAHpB;AAIE,MAAA,OAAO,EAAE,MAAKH,KAAL,CAAWI,OAJtB;AAKE,MAAA,IAAI,EAAE,CALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADS,EAQT,oBAAC,aAAD;AACE,MAAA,MAAM,EAAE,IAAIX,MAAJ,CAAW,CAAC,GAAD,EAAM,CAAN,CAAX,CADV;AAEE,MAAA,UAAU,EAAE,IAAIA,MAAJ,CAAW,CAAC,GAAD,EAAM,IAAN,CAAX,CAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARS,EAYT,oBAAC,MAAD;AACE,MAAA,KAAK,EAAE,GADT;AAEE,MAAA,KAAK,EAAE,IAFT;AAGE,MAAA,MAAM,EAAE,GAHV;AAIE,MAAA,CAAC,EAAE,CAJL;AAKE,MAAA,WAAW,EAAC,YALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZS,CA3BQ;AAEjB,UAAKY,aAAL,GAAqB,MAAKL,KAAL,CAAWK,aAAhC;AACA,UAAKR,YAAL,GAAoB,IAAIA,YAAJ,EAApB;AAHiB;AAIlB;;;;yCAEoB;AACnB;;AACA,UAAI,KAAKG,KAAL,CAAWM,UAAf,EACE,KAAKN,KAAL,CAAWO,iBAAX,CAA6B,IAA7B,EAAmC,GAAnC,EAAwC;AACtCC,QAAAA,OAAO,EAAE;AAAEL,UAAAA,KAAK,EAAE,IAAIV,MAAJ,CAAW,CAAC,CAAD,EAAI,CAAC,KAAL,CAAX,CAAT;AAAkCgB,UAAAA,QAAQ,EAAE;AAA5C,SAD6B;AAEtCC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb;AAF+B,OAAxC,EAHiB,CAOnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACD;;;;EA3BkBtB,a;;AAkDrBU,MAAM,CAACa,SAAP,GAAmB;AAAEP,EAAAA,aAAa,EAAEV,SAAS,CAACkB,IAAV,CAAeC;AAAhC,CAAnB;AACAf,MAAM,CAACgB,YAAP,GAAsB;AAAEV,EAAAA,aAAa,EAAE;AAAjB,CAAtB;AAEA,eAAeP,SAAS,CAACJ,qBAAqB,CAACK,MAAD,CAAtB,CAAxB","sourcesContent":["import GameComponent from \"../../../../GameObject/GameComponent\";\nimport React from \"react\";\nimport RigidBody from \"../../../../GameObject/RigidBody\";\nimport CollisionZone from \"../../../../GameObject/CollisionZone\";\nimport Vector from \"../../../../Vector/Vector\";\nimport WithKeyboardSubscribe from \"../../../../InputManager/HOC/WithKeyboardSubscribe\";\nimport PropTypes from \"prop-types\";\nimport Sprite from \"../../../../Sprite/Sprite\";\nimport AudioManager from \"../../../../AudioManager/AudioManager\";\nimport { WithWorld } from \"../../../../World/HOC/WithWorld\";\n\nclass Runner extends GameComponent {\n  constructor(props) {\n    super(props);\n    this.cameraFollows = this.props.cameraFollows;\n    this.AudioManager = new AudioManager();\n  }\n\n  componentWillMount() {\n    super.componentWillMount();\n    if (this.props.controller)\n      this.props.keyboardSubscribe(this, \" \", {\n        physics: { force: new Vector([0, -10000]), duration: 70 },\n        audio: { soundName: \"sfx_wing.wav\" }\n      });\n    // this.props.keyboardSubscribe(this, \"s\", {\n    //   physics: { force: new Vector([0, 10000]), duration: 70 },\n    //   audio: {soundName: \"sfx_wing.wav\"},\n    // });\n    // this.props.keyboardSubscribe(this, \"d\", {\n    //   physics: { force: new Vector([1000, 0]), duration: 70 },\n    //   audio: {soundName: \"sfx_wing.wav\"},\n    // });\n\n    // this.props.keyboardSubscribe(this, \"a\", {\n    //   physics: { force: new Vector([-1000, 0]), duration: 70 },\n    //   audio: {soundName: \"sfx_wing.wav\"},\n    // });\n  }\n  children = [\n    <RigidBody\n      weight={10}\n      velocity={this.props.velocity}\n      force={this.props.force}\n      gravity={this.props.gravity}\n      drag={1}\n    />,\n    <CollisionZone\n      offset={new Vector([0.5, 0])}\n      dimensions={new Vector([3.5, 10.3])}\n    />,\n    <Sprite\n      scale={0.4}\n      width={2048}\n      height={256}\n      n={8}\n      imagesource=\"bondin.png\"\n    />\n  ];\n}\n\nRunner.propTypes = { cameraFollows: PropTypes.bool.isRequired };\nRunner.defaultProps = { cameraFollows: false };\n\nexport default WithWorld(WithKeyboardSubscribe(Runner));\n"]},"metadata":{},"sourceType":"module"}