{"ast":null,"code":"import _classCallCheck from \"/Users/torkildjurhuus/Code/SheepJumper/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/torkildjurhuus/Code/SheepJumper/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/torkildjurhuus/Code/SheepJumper/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/torkildjurhuus/Code/SheepJumper/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/torkildjurhuus/Code/SheepJumper/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/torkildjurhuus/Code/SheepJumper/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/torkildjurhuus/Code/SheepJumper/src/World/World.js\";\nimport React from \"react\";\nimport WithKeyboardSubscribe from \"../InputManager/HOC/WithKeyboardSubscribe\";\nimport Timer from \"../Timer/Timer\";\nimport PhysicsEngine from \"../PhysicsEngine/PhysicsEngine\";\nimport CollisionManger from \"../CollisionManager/CollisionManager\";\nimport EventManager from \"../EventManager/EventManager\";\nimport Camera from \"./../Camera/Camera\";\nimport WorldContextProvider from \"./Context/WorldContextProvider\";\nimport Game from \"./../Resources/Games/SheepRunner/Game\";\n\nArray.prototype.filterInPlace = function (predicate) {\n  for (var i = 0; i < this.length; ++i) {\n    if (predicate(this[i])) {\n      this[this.length - 1] = this[i];\n      this.pop();\n    }\n  }\n};\n\nvar World =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(World, _React$Component);\n\n  function World(props) {\n    var _this;\n\n    _classCallCheck(this, World);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(World).call(this, props));\n\n    _this.registerComponent = function (component) {\n      if (_this.camera === null && component.props.cameraFollows) {\n        _this.camera = new Camera(component);\n      }\n\n      _this.components.push(component);\n    };\n\n    _this.unregisterComponent = function (component) {\n      _this.components.filterInPlace(function (aComponent) {\n        return aComponent !== component;\n      });\n    };\n\n    _this.updateWorld = function () {\n      _this.components.forEach(function (component) {\n        return component.update();\n      });\n\n      _this.setState({});\n    };\n\n    _this.render = function () {\n      return React.createElement(WorldContextProvider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Game, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }));\n    };\n\n    _this.beforeFrameRender = function () {\n      _this.components.forEach(function (component) {\n        component.beforeFrameRender && component.beforeFrameRender();\n      });\n    };\n\n    _this.camera = null;\n    _this.components = [];\n    WorldContextProvider.WorldInstance = _assertThisInitialized(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(World, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      Timer.instance.subscribe(EventManager.instance.handleTick);\n      Timer.instance.subscribe(PhysicsEngine.instance.processRigidBodies);\n      Timer.instance.subscribe(CollisionManger.instance.handleCollisions);\n      Timer.instance.subscribe(function (dt) {\n        return _this2.camera.moveCamera(dt, _this2.components);\n      });\n      Timer.instance.subscribe(this.beforeFrameRender);\n      Timer.instance.subscribe(this.updateWorld);\n    }\n  }]);\n\n  return World;\n}(React.Component);\n\nexport default WithKeyboardSubscribe(World);","map":{"version":3,"sources":["/Users/torkildjurhuus/Code/SheepJumper/src/World/World.js"],"names":["React","WithKeyboardSubscribe","Timer","PhysicsEngine","CollisionManger","EventManager","Camera","WorldContextProvider","Game","Array","prototype","filterInPlace","predicate","i","length","pop","World","props","registerComponent","component","camera","cameraFollows","components","push","unregisterComponent","aComponent","updateWorld","forEach","update","setState","render","beforeFrameRender","WorldInstance","instance","subscribe","handleTick","processRigidBodies","handleCollisions","dt","moveCamera","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport WithKeyboardSubscribe from \"../InputManager/HOC/WithKeyboardSubscribe\";\nimport Timer from \"../Timer/Timer\";\nimport PhysicsEngine from \"../PhysicsEngine/PhysicsEngine\";\nimport CollisionManger from \"../CollisionManager/CollisionManager\";\n\nimport EventManager from \"../EventManager/EventManager\";\n\nimport Camera from \"./../Camera/Camera\";\nimport WorldContextProvider from \"./Context/WorldContextProvider\";\n\nimport Game from \"./../Resources/Games/SheepRunner/Game\";\n\nArray.prototype.filterInPlace = function(predicate) {\n  for (let i = 0; i < this.length; ++i) {\n    if (predicate(this[i])) {\n      this[this.length - 1] = this[i];\n      this.pop();\n    }\n  }\n};\n\nclass World extends React.Component {\n  constructor(props) {\n    super(props);\n    this.camera = null;\n    this.components = [];\n    WorldContextProvider.WorldInstance = this;\n  }\n\n  registerComponent = component => {\n    if (this.camera === null && component.props.cameraFollows) {\n      this.camera = new Camera(component);\n    }\n    this.components.push(component);\n  };\n\n  unregisterComponent = component => {\n    this.components.filterInPlace(aComponent => aComponent !== component);\n  };\n\n  updateWorld = () => {\n    this.components.forEach(component => component.update());\n    this.setState({});\n  };\n\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  render = () => (\n    <WorldContextProvider>\n      <Game />\n    </WorldContextProvider>\n  );\n\n  beforeFrameRender = () => {\n    this.components.forEach(component => {\n      component.beforeFrameRender && component.beforeFrameRender();\n    });\n  };\n\n  componentDidMount() {\n    Timer.instance.subscribe(EventManager.instance.handleTick);\n    Timer.instance.subscribe(PhysicsEngine.instance.processRigidBodies);\n    Timer.instance.subscribe(CollisionManger.instance.handleCollisions);\n    Timer.instance.subscribe(dt => this.camera.moveCamera(dt, this.components));\n    Timer.instance.subscribe(this.beforeFrameRender);\n    Timer.instance.subscribe(this.updateWorld);\n  }\n}\n\nexport default WithKeyboardSubscribe(World);\n"]},"metadata":{},"sourceType":"module"}