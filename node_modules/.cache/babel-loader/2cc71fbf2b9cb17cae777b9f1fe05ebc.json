{"ast":null,"code":"import _classCallCheck from \"/Users/torkildjurhuus/Code/SheepJumper/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/torkildjurhuus/Code/SheepJumper/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/torkildjurhuus/Code/SheepJumper/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/torkildjurhuus/Code/SheepJumper/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/torkildjurhuus/Code/SheepJumper/src/Resources/Games/SheepRunner/GameComponents/Sheep.js\";\nimport React from \"react\";\nimport GameComponent from \"../../../../GameObject/GameComponent\";\nimport Vector from \"../../../../Vector/Vector\";\nimport CollisionZone from \"../../../../GameObject/CollisionZone\";\nimport Sprite from \"../../../../GameComponents/Sprite\";\nimport PropTypes from \"prop-types\";\nimport Game from \"../Game\";\nimport AudioManager from \"../../../../AudioManager/AudioManager\";\nimport { WithWorld } from \"../../../../World/HOC/WithWorld\";\n\nvar Sheep =\n/*#__PURE__*/\nfunction (_GameComponent) {\n  _inherits(Sheep, _GameComponent);\n\n  function Sheep(props) {\n    var _this;\n\n    _classCallCheck(this, Sheep);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Sheep).call(this, props));\n    _this.CollisionHeight = 10;\n    _this.sheepSize = 100;\n    _this.sheepOffset = 50;\n    _this.children = [React.createElement(Sprite, {\n      offset: _this.props.offset,\n      imagesource: \"sheep.png\",\n      size: new Vector([_this.props.width, 10]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(CollisionZone, {\n      offset: _this.props.offset,\n      dimensions: new Vector([_this.props.width, 10]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(CollisionZone, {\n      name: \"scoreZone\",\n      offset: new Vector([_this.props.offset.x + _this.props.width / 4, 0]),\n      dimensions: new Vector([_this.props.width / 2, _this.props.offset.y]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })];\n\n    _this.handleCollision = function (collider) {\n      var object = collider.object,\n          collisionZone = collider.collisionZone; // if (object.constructor.name !== \"Bird\") return;\n\n      if (object.name !== \"Runner\") {\n        return;\n      }\n\n      if (collisionZone.name === \"scoreZone\") {\n        ++Game.instance.score;\n\n        _this.AudioManager.playSound(\"sfx_point.wav\");\n      } else {\n        Game.instance.gameOver = true;\n\n        _this.AudioManager.playSound(\"sfx_hit.wav\");\n\n        _this.AudioManager.playSound(\"sfx_die.wav\");\n\n        if (Game.instance.score > Game.instance.highScore) {\n          Game.instance.highScore = Game.instance.score;\n        }\n      }\n    };\n\n    _this.AudioManager = new AudioManager();\n    return _this;\n  }\n\n  return Sheep;\n}(GameComponent);\n\nSheep.propTypes = {\n  width: PropTypes.number\n};\nSheep.defaultProps = {\n  width: 4\n};\nexport default WithWorld(Sheep);","map":{"version":3,"sources":["/Users/torkildjurhuus/Code/SheepJumper/src/Resources/Games/SheepRunner/GameComponents/Sheep.js"],"names":["React","GameComponent","Vector","CollisionZone","Sprite","PropTypes","Game","AudioManager","WithWorld","Sheep","props","CollisionHeight","sheepSize","sheepOffset","children","offset","width","x","y","handleCollision","collider","object","collisionZone","name","instance","score","playSound","gameOver","highScore","propTypes","number","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport GameComponent from \"../../../../GameObject/GameComponent\";\nimport Vector from \"../../../../Vector/Vector\";\nimport CollisionZone from \"../../../../GameObject/CollisionZone\";\nimport Sprite from \"../../../../GameComponents/Sprite\";\nimport PropTypes from \"prop-types\";\nimport Game from \"../Game\";\nimport AudioManager from \"../../../../AudioManager/AudioManager\";\nimport { WithWorld } from \"../../../../World/HOC/WithWorld\";\n\nclass Sheep extends GameComponent {\n  constructor(props) {\n    super(props);\n    this.AudioManager = new AudioManager();\n  }\n\n  CollisionHeight = 10;\n  sheepSize = 100;\n  sheepOffset = 50;\n\n  children = [\n    <Sprite\n      offset={this.props.offset}\n      imagesource=\"sheep.png\"\n      size={new Vector([this.props.width, 10])}\n    />,\n    <CollisionZone\n      offset={this.props.offset}\n      dimensions={new Vector([this.props.width, 10])}\n    />,\n    <CollisionZone\n      name={\"scoreZone\"}\n      offset={new Vector([this.props.offset.x + this.props.width / 4, 0])}\n      dimensions={new Vector([this.props.width / 2, this.props.offset.y])}\n    />\n  ];\n\n  handleCollision = collider => {\n    const { object, collisionZone } = collider;\n    // if (object.constructor.name !== \"Bird\") return;\n    if (object.name !== \"Runner\") {\n      return;\n    }\n\n    if (collisionZone.name === \"scoreZone\") {\n      ++Game.instance.score;\n      this.AudioManager.playSound(\"sfx_point.wav\");\n    } else {\n      Game.instance.gameOver = true;\n      this.AudioManager.playSound(\"sfx_hit.wav\");\n      this.AudioManager.playSound(\"sfx_die.wav\");\n      if (Game.instance.score > Game.instance.highScore) {\n        Game.instance.highScore = Game.instance.score;\n      }\n    }\n  };\n}\n\nSheep.propTypes = {\n  width: PropTypes.number\n};\nSheep.defaultProps = {\n  width: 4\n};\n\nexport default WithWorld(Sheep);\n"]},"metadata":{},"sourceType":"module"}