{"ast":null,"code":"import _classCallCheck from \"/Users/torkildjurhuus/Code/SheepJumper/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/torkildjurhuus/Code/SheepJumper/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/torkildjurhuus/Code/SheepJumper/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/torkildjurhuus/Code/SheepJumper/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/torkildjurhuus/Code/SheepJumper/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/torkildjurhuus/Code/SheepJumper/src/GameObject/CollisionZone.js\";\nimport React, { Component } from \"react\";\nimport CollisionManger from \"../CollisionManager/CollisionManager\";\nimport PropTypes from \"prop-types\";\nimport Vector from \"./../Vector/Vector\";\n\nvar CollisionZone =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CollisionZone, _Component);\n\n  function CollisionZone(props) {\n    var _this;\n\n    _classCallCheck(this, CollisionZone);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CollisionZone).call(this, props));\n\n    _this.update = function () {\n      _this.setState({});\n    };\n\n    _this.render = function () {\n      var realPosition = _this.props.parent.position.plus(_this.props.offset);\n\n      var dimensions = _this.props.dimensions;\n      return (// <></>\n        React.createElement(\"div\", {\n          style: {\n            position: \"absolute\",\n            height: dimensions.y + \"%\",\n            width: dimensions.x + \"%\",\n            top: realPosition.y + \"%\",\n            left: realPosition.x + \"%\",\n            backgroundColor: \"rgba(99,99,99,.1)\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        })\n      );\n    };\n\n    _this.position = _this.props.parent.position;\n    _this.dimensions = _this.props.dimensions;\n    _this.name = _this.props.name;\n\n    for (var i in _this.props) {\n      _this[i] = _this.props[i];\n    }\n\n    _this.collision = new Set();\n    return _this;\n  }\n\n  _createClass(CollisionZone, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      for (var i in props) {\n        this[i] = props[i];\n      }\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.parent.addCollisionZone(this);\n      this.idx = CollisionManger.instance.add(this);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      CollisionManger.instance.remove(this.idx);\n      this.props.parent.remove(this);\n    }\n  }, {\n    key: \"position\",\n    get: function get() {\n      return this.parent.position;\n    },\n    set: function set(position) {\n      this._position = position;\n    }\n  }]);\n\n  return CollisionZone;\n}(Component);\n\nexport { CollisionZone as default };\nCollisionZone.propTypes = {\n  dimensions: PropTypes.instanceOf(Vector).isRequired,\n  offset: PropTypes.instanceOf(Vector).isRequired,\n  name: PropTypes.string.isRequired\n};\nCollisionZone.defaultProps = {\n  offset: new Vector(),\n  name: \"unnamed\"\n};","map":{"version":3,"sources":["/Users/torkildjurhuus/Code/SheepJumper/src/GameObject/CollisionZone.js"],"names":["React","Component","CollisionManger","PropTypes","Vector","CollisionZone","props","update","setState","render","realPosition","parent","position","plus","offset","dimensions","height","y","width","x","top","left","backgroundColor","name","i","collision","Set","addCollisionZone","idx","instance","add","remove","_position","propTypes","instanceOf","isRequired","string","defaultProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,eAAP,MAA4B,sCAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;IAEqBC,a;;;;;AACnB,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,uFAAMA,KAAN;;AADiB,UAkCnBC,MAlCmB,GAkCV,YAAM;AACb,YAAKC,QAAL,CAAc,EAAd;AACD,KApCkB;;AAAA,UAsCnBC,MAtCmB,GAsCV,YAAM;AACb,UAAMC,YAAY,GAAG,MAAKJ,KAAL,CAAWK,MAAX,CAAkBC,QAAlB,CAA2BC,IAA3B,CAAgC,MAAKP,KAAL,CAAWQ,MAA3C,CAArB;;AADa,UAELC,UAFK,GAEU,MAAKT,KAFf,CAELS,UAFK;AAGb,aACE;AACA;AACE,UAAA,KAAK,EAAE;AACLH,YAAAA,QAAQ,EAAE,UADL;AAELI,YAAAA,MAAM,EAAED,UAAU,CAACE,CAAX,GAAe,GAFlB;AAGLC,YAAAA,KAAK,EAAEH,UAAU,CAACI,CAAX,GAAe,GAHjB;AAILC,YAAAA,GAAG,EAAEV,YAAY,CAACO,CAAb,GAAiB,GAJjB;AAKLI,YAAAA,IAAI,EAAEX,YAAY,CAACS,CAAb,GAAiB,GALlB;AAMLG,YAAAA,eAAe,EAAE;AANZ,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAaD,KAtDkB;;AAEjB,UAAKV,QAAL,GAAgB,MAAKN,KAAL,CAAWK,MAAX,CAAkBC,QAAlC;AACA,UAAKG,UAAL,GAAkB,MAAKT,KAAL,CAAWS,UAA7B;AACA,UAAKQ,IAAL,GAAY,MAAKjB,KAAL,CAAWiB,IAAvB;;AACA,SAAK,IAAMC,CAAX,IAAgB,MAAKlB,KAArB,EAA4B;AAC1B,YAAKkB,CAAL,IAAU,MAAKlB,KAAL,CAAWkB,CAAX,CAAV;AACD;;AACD,UAAKC,SAAL,GAAiB,IAAIC,GAAJ,EAAjB;AARiB;AASlB;;;;8CAEyBpB,K,EAAO;AAC/B,WAAK,IAAMkB,CAAX,IAAgBlB,KAAhB,EAAuB;AACrB,aAAKkB,CAAL,IAAUlB,KAAK,CAACkB,CAAD,CAAf;AACD;AACF;;;yCASoB;AACnB,WAAKlB,KAAL,CAAWK,MAAX,CAAkBgB,gBAAlB,CAAmC,IAAnC;AACA,WAAKC,GAAL,GAAW1B,eAAe,CAAC2B,QAAhB,CAAyBC,GAAzB,CAA6B,IAA7B,CAAX;AACD;;;2CAEsB;AACrB5B,MAAAA,eAAe,CAAC2B,QAAhB,CAAyBE,MAAzB,CAAgC,KAAKH,GAArC;AACA,WAAKtB,KAAL,CAAWK,MAAX,CAAkBoB,MAAlB,CAAyB,IAAzB;AACD;;;wBAhBc;AACb,aAAO,KAAKpB,MAAL,CAAYC,QAAnB;AACD,K;sBAEYA,Q,EAAU;AACrB,WAAKoB,SAAL,GAAiBpB,QAAjB;AACD;;;;EAvBwCX,S;;SAAtBI,a;AA0DrBA,aAAa,CAAC4B,SAAd,GAA0B;AACxBlB,EAAAA,UAAU,EAAEZ,SAAS,CAAC+B,UAAV,CAAqB9B,MAArB,EAA6B+B,UADjB;AAExBrB,EAAAA,MAAM,EAAEX,SAAS,CAAC+B,UAAV,CAAqB9B,MAArB,EAA6B+B,UAFb;AAGxBZ,EAAAA,IAAI,EAAEpB,SAAS,CAACiC,MAAV,CAAiBD;AAHC,CAA1B;AAMA9B,aAAa,CAACgC,YAAd,GAA6B;AAC3BvB,EAAAA,MAAM,EAAE,IAAIV,MAAJ,EADmB;AAE3BmB,EAAAA,IAAI,EAAE;AAFqB,CAA7B","sourcesContent":["import React, { Component } from \"react\";\nimport CollisionManger from \"../CollisionManager/CollisionManager\";\nimport PropTypes from \"prop-types\";\nimport Vector from \"./../Vector/Vector\";\n\nexport default class CollisionZone extends Component {\n  constructor(props) {\n    super(props);\n    this.position = this.props.parent.position;\n    this.dimensions = this.props.dimensions;\n    this.name = this.props.name;\n    for (const i in this.props) {\n      this[i] = this.props[i];\n    }\n    this.collision = new Set();\n  }\n\n  componentWillReceiveProps(props) {\n    for (const i in props) {\n      this[i] = props[i];\n    }\n  }\n  get position() {\n    return this.parent.position;\n  }\n\n  set position(position) {\n    this._position = position;\n  }\n\n  componentWillMount() {\n    this.props.parent.addCollisionZone(this);\n    this.idx = CollisionManger.instance.add(this);\n  }\n\n  componentWillUnmount() {\n    CollisionManger.instance.remove(this.idx);\n    this.props.parent.remove(this);\n  }\n\n  update = () => {\n    this.setState({});\n  };\n\n  render = () => {\n    const realPosition = this.props.parent.position.plus(this.props.offset);\n    const { dimensions } = this.props;\n    return (\n      // <></>\n      <div\n        style={{\n          position: \"absolute\",\n          height: dimensions.y + \"%\",\n          width: dimensions.x + \"%\",\n          top: realPosition.y + \"%\",\n          left: realPosition.x + \"%\",\n          backgroundColor: \"rgba(99,99,99,.1)\"\n        }}\n      />\n    );\n  };\n}\n\nCollisionZone.propTypes = {\n  dimensions: PropTypes.instanceOf(Vector).isRequired,\n  offset: PropTypes.instanceOf(Vector).isRequired,\n  name: PropTypes.string.isRequired\n};\n\nCollisionZone.defaultProps = {\n  offset: new Vector(),\n  name: \"unnamed\"\n};\n"]},"metadata":{},"sourceType":"module"}