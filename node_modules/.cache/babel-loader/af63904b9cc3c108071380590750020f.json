{"ast":null,"code":"import _regeneratorRuntime from \"/Users/torkildjurhuus/Code/SheepJumper/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/torkildjurhuus/Code/SheepJumper/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/torkildjurhuus/Code/SheepJumper/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/torkildjurhuus/Code/SheepJumper/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport Game from \"../Resources/Games/SheepRunner/Game\";\n\nvar Timer =\n/*#__PURE__*/\nfunction () {\n  _createClass(Timer, null, [{\n    key: \"instance\",\n    get: function get() {\n      if (Timer._instance === undefined) Timer._instance = new Timer(60);\n      return Timer._instance;\n    }\n  }]);\n\n  function Timer() {\n    var _this = this;\n\n    var framerate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 30;\n\n    _classCallCheck(this, Timer);\n\n    this.subscribe = function (callback) {\n      return _this.callbacks.push(callback);\n    };\n\n    this.subscribeToTime = function (callback, offset) {\n      return _this.oneTimeCallBacks.push({\n        time: _this.now() + offset,\n        callback: callback\n      });\n    };\n\n    this.handleOneTimersEnter = true;\n    this.handleOneTimers =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var length, i;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (_this.handleOneTimers) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              _this.handleOneTimersEnter = false;\n              length = _this.oneTimeCallBacks.length;\n\n              for (i = 0; i < _this.oneTimeCallBacks.length; ++i) {\n                if (_this.oneTimeCallBacks[i] && _this.oneTimeCallBacks[i].time <= _this.now()) {\n                  _this.oneTimeCallBacks[i].callback();\n\n                  _this.oneTimeCallBacks[i] = _this.oneTimeCallBacks[length - 1];\n\n                  _this.oneTimeCallBacks.pop();\n                }\n              }\n\n              _this.handleOneTimersEnter = true;\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    this.unsubscribe = function (callback) {\n      var callbacks = _this.callbacks;\n      if (callbacks.length) return false; // poor implementation, but can't think of a better way atm...\n\n      var idx = callbacks.findIndex(function (val) {\n        return val.name === callback.name && val.toString() === callback.toString();\n      });\n      return idx === -1 ? false : !!callbacks.splice(idx, 1);\n    };\n\n    this.pause = false;\n\n    this.step = function () {\n      requestAnimationFrame(_this.step);\n\n      if (Game.instance.pause) {\n        _this.time = _this.now();\n        return;\n      }\n\n      _this.handleOneTimers();\n\n      var dt = _this.now() - _this.time;\n\n      if (dt >= _this.interval) {\n        _this.time = _this.now();\n\n        _this.callbacks.forEach(function (val) {\n          return val(dt);\n        });\n      }\n    };\n\n    this.now = require(\"performance-now\");\n    this.interval = 1000 / framerate; // ms\n\n    this.callbacks = [];\n    this.oneTimeCallBacks = [];\n    this.time = this.now();\n    requestAnimationFrame(this.step);\n  } //subscriba til gameLoop\n\n\n  return Timer;\n}();\n\nTimer._instance = undefined;\nexport { Timer as default };","map":{"version":3,"sources":["/Users/torkildjurhuus/Code/SheepJumper/src/Timer/Timer.js"],"names":["Game","Timer","_instance","undefined","framerate","subscribe","callback","callbacks","push","subscribeToTime","offset","oneTimeCallBacks","time","now","handleOneTimersEnter","handleOneTimers","length","i","pop","unsubscribe","idx","findIndex","val","name","toString","splice","pause","step","requestAnimationFrame","instance","dt","interval","forEach","require"],"mappings":"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","sourcesContent":["import Game from \"../Resources/Games/SheepRunner/Game\";\n\nexport default class Timer {\n  static _instance = undefined;\n  static get instance() {\n    if (Timer._instance === undefined) Timer._instance = new Timer(60);\n    return Timer._instance;\n  }\n  constructor(framerate = 30) {\n    this.now = require(\"performance-now\");\n    this.interval = 1000 / framerate; // ms\n    this.callbacks = [];\n    this.oneTimeCallBacks = [];\n    this.time = this.now();\n    requestAnimationFrame(this.step);\n  }\n\n  //subscriba til gameLoop\n  subscribe = callback => this.callbacks.push(callback);\n\n  subscribeToTime = (callback, offset) =>\n    this.oneTimeCallBacks.push({\n      time: this.now() + offset,\n      callback: callback\n    });\n\n  handleOneTimersEnter = true;\n\n  handleOneTimers = async () => {\n    if (!this.handleOneTimers) return;\n    this.handleOneTimersEnter = false;\n    const length = this.oneTimeCallBacks.length;\n    for (let i = 0; i < this.oneTimeCallBacks.length; ++i)\n      if (\n        this.oneTimeCallBacks[i] &&\n        this.oneTimeCallBacks[i].time <= this.now()\n      ) {\n        this.oneTimeCallBacks[i].callback();\n        this.oneTimeCallBacks[i] = this.oneTimeCallBacks[length - 1];\n        this.oneTimeCallBacks.pop();\n      }\n    this.handleOneTimersEnter = true;\n  };\n\n  unsubscribe = callback => {\n    const { callbacks } = this;\n    if (callbacks.length) return false;\n    // poor implementation, but can't think of a better way atm...\n    const idx = callbacks.findIndex(\n      val =>\n        val.name === callback.name && val.toString() === callback.toString()\n    );\n    return idx === -1 ? false : !!callbacks.splice(idx, 1);\n  };\n  // should come elsewhere\n  pause = false;\n\n  step = () => {\n    requestAnimationFrame(this.step);\n    if (Game.instance.pause) {\n      this.time = this.now();\n      return;\n    }\n    this.handleOneTimers();\n    const dt = this.now() - this.time;\n    if (dt >= this.interval) {\n      this.time = this.now();\n      this.callbacks.forEach(val => val(dt));\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}