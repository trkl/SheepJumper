{"ast":null,"code":"import _classCallCheck from \"/Users/torkildjurhuus/Code/SheepJumper/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/torkildjurhuus/Code/SheepJumper/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport Vector from \"../Vector/Vector\";\n\nvar Camera =\n/*#__PURE__*/\nfunction () {\n  // moving objects on screen to simulate camera movement\n  function Camera(rigidBody) {\n    _classCallCheck(this, Camera);\n\n    this.protagonist = rigidBody;\n  }\n\n  _createClass(Camera, [{\n    key: \"moveCamera\",\n    value: function moveCamera(time, gameObjects) {\n      var distance = this.protagonist.rigidBody.velocity.multiply(time / 1000);\n      gameObjects.forEach(function (val, idx) {\n        gameObjects[idx].position = new Vector([gameObjects[idx].position.x - distance.x, gameObjects[idx].position.y]);\n      });\n    }\n  }]);\n\n  return Camera;\n}();\n\nexport { Camera as default };","map":{"version":3,"sources":["/Users/torkildjurhuus/Code/SheepJumper/src/Camera/Camera.js"],"names":["Vector","Camera","rigidBody","protagonist","time","gameObjects","distance","velocity","multiply","forEach","val","idx","position","x","y"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,kBAAnB;;IAEqBC,M;;;AACnB;AAEA,kBAAYC,SAAZ,EAAuB;AAAA;;AACrB,SAAKC,WAAL,GAAmBD,SAAnB;AACD;;;;+BAEUE,I,EAAMC,W,EAAa;AAC5B,UAAMC,QAAQ,GAAG,KAAKH,WAAL,CAAiBD,SAAjB,CAA2BK,QAA3B,CAAoCC,QAApC,CAA6CJ,IAAI,GAAG,IAApD,CAAjB;AACAC,MAAAA,WAAW,CAACI,OAAZ,CAAoB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAChCN,QAAAA,WAAW,CAACM,GAAD,CAAX,CAAiBC,QAAjB,GAA4B,IAAIZ,MAAJ,CAAW,CACrCK,WAAW,CAACM,GAAD,CAAX,CAAiBC,QAAjB,CAA0BC,CAA1B,GAA8BP,QAAQ,CAACO,CADF,EAErCR,WAAW,CAACM,GAAD,CAAX,CAAiBC,QAAjB,CAA0BE,CAFW,CAAX,CAA5B;AAID,OALD;AAMD;;;;;;SAfkBb,M","sourcesContent":["import Vector from \"../Vector/Vector\";\n\nexport default class Camera {\n  // moving objects on screen to simulate camera movement\n\n  constructor(rigidBody) {\n    this.protagonist = rigidBody;\n  }\n\n  moveCamera(time, gameObjects) {\n    const distance = this.protagonist.rigidBody.velocity.multiply(time / 1000);\n    gameObjects.forEach((val, idx) => {\n      gameObjects[idx].position = new Vector([\n        gameObjects[idx].position.x - distance.x,\n        gameObjects[idx].position.y\n      ]);\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}